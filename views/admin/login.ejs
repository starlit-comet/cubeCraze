<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login</title>
    <link rel="stylesheet" href="/css/admin/adminLogin.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <div class="container">
        <div class="login-section">
            <form id="loginForm">
                <h2>ADMIN LOGIN</h2>
                <p>Login With Your Credentials to Manage Shopping Experience</p>
                <div class="input-group">
                    <input type="email" name="email" placeholder="Email" required>
                </div>
                <div class="input-group">
                    <input type="password" name="password" placeholder="Password" required>
                </div>
                <div class="forgot-password">
                    <a href="/admin/forgetPassword">Forgot password?</a>
                </div>
                <button class="login-button" type="submit">Login Now</button>
            </form>
        </div>
        <div class="image-section">
            <img src="/img/home-logo-1-1.png" alt="CubeCraze Logo">
        </div>
    </div>

    <script>
        document.querySelector('#loginForm').addEventListener('submit', async (event) => {
            event.preventDefault();
            let form = event.target;
            let loginData = new URLSearchParams(new FormData(form)); // Converts FormData to URL-encoded format
            console.log([...loginData])
            try {
                console.log("Sending data:", Object.fromEntries(loginData)); // Debugging

                let response = await fetch('/admin/login', {
                    method: 'POST',
                    headers:{
                      'Content-Type': 'application/x-www-form-urlencoded' // Ensure proper content-type

                    },
                    body: loginData,
                });

                if (!response.ok) {
                    throw new Error("Server returned an error");
                }

                let result = await response.json();
                console.log(result)
                if (!result.success) {
                    Swal.fire({
                         title:'ERROR',
                         text: `${result.message}`,
                         icon:'error'
                      });
                } else {
                    Swal.fire({
                        title: "Login Successful!",
                        text: "Redirecting to dashboard...",
                        icon: "success",
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.href = "/admin/dashboard"; // Redirect after success
                    });
                }

            } catch (error) {
                console.error("Fetch Error:", error);
                Swal.fire("Error!", "Something went wrong. Please try again.", "error");
            }
        });
    </script>
</body>
</html>
