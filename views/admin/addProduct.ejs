<%-include ('partials/headSection.ejs') %>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
    <div class="screen-overlay"></div>
    <%-include('partials/sidebar.ejs') %>
    <main class="main-wrap">

    <%-include('partials/header.ejs')  %>
        <section class="content-main">
            <div class="row">
                <div class="col-12">
                    <form id="productForm" enctype="multipart/form-data">
                        <div class="content-header">
                            <h2 class="content-title">Add New Product</h2>
                            <div>
                                <button type="submit" class="btn btn-md rounded font-sm hover-up">CREATE PRODUCT</button>
                            </div>
                        </div>
                    
                        <div class="col-lg-12">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Fill Up Product Details</h4>
                                </div>
                                <div class="card-body">
                                    <div class="mb-4">
                                        <label for="product_name" class="form-label">Product Title</label>
                                        <input type="text" placeholder="Type here" name="productName" class="form-control" id="product_name" required>
                                    </div>
                                    <div class="mb-4">
                                        <label for="description" class="form-label">Full Description</label>
                                        <textarea placeholder="Type here" name="description" class="form-control" id="description" rows="4" required></textarea>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6">
                                            <div class="mb-4">
                                                <label for="regular_price" class="form-label">Regular Price (₹)</label>
                                                <input name="regularPrice" type="number" class="form-control" id="regular_price" min="0" required>
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="mb-4">
                                                <label for="promotional_price" class="form-label">Promotional Price (₹)</label>
                                                <input name="promotionalPrice" type="number" class="form-control" id="promotional_price" min="0">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    
                       
                    
                        <!-- Organization Section -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h4>Organization</h4>
                            </div>
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-lg-6">
                                        <label for="brand" class="form-label">Select Brand</label>
                                        <select name="brand" class="form-select" id="brand" required>
                                            <option value="">Choose a Brand</option>
                                            <% activeBrandNames.forEach(brand => { %>
                                                <option value="<%= brand._id %>"><%= brand.brandName %></option>
                                            <% }) %>
                                        </select>
                                    </div>
                                    <div class="col-lg-6">
                                        <label for="category" class="form-label">Select Category</label>
                                        <select name="category" class="form-select" id="category" required>
                                            <option value="">Choose a Category</option>
                                            <% activeCategories.forEach(category => { %>
                                                <option value="<%= category._id %>"><%= category.categoryName %></option>
                                            <% }) %>
                                        </select>
                                    </div>
                                    <div class="col-lg-6">
                                        <label for="cube_size" class="form-label">Select Cube Size</label>
                                        <select name="cubeSize" class="form-select" id="cube_size" required>
                                            <option value="">Choose a Size</option>
                                            <% cubeSizes.forEach(size => { %>
                                                <option value="<%= size._id %>"><%= size.size %></option>
                                            <% }) %>
                                        </select>
                                    </div>
                                    
                                        <div class="col-lg-6">
                                            <div class="mb-4">
                                                <label for="product_quantity" class="form-label">Product Quantity</label>
                                                <input name="productQuantity" type="number" class="form-control" id="product_quantity" min="0">
                                            </div>
                                        </div>
                                        
                                    
                                </div>
                            </div>
                        </div>
                    </form>

                     <!-- Image Upload -->
                     <div class="d-flex justify-content-between flex-wrap">
                        <% for (let i = 0; i < 4; i++) { %>
                            <div class="col-lg-3">
                                <div class="card col-lg-12">
                                    <div class="mb-3">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h4>Media</h4>
                                            <button type="button" class="btn btn-danger btn-sm remove-image" data-index="<%= i %>">Remove</button>
                                        </div>
                                        <div class="card-body">
                                            <div class="input-upload text-center">
                                                <img src="../../assets/imgs/theme/upload.svg" alt="Upload Image" class="img-preview" data-index="<%= i %>" width="100%">
                                                <input type="file" name="productImages" class="form-control img-input" data-index="<%= i %>" accept="image/*">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                    </div>
                
                    <!-- Cropper.js Modal -->
                    <div class="modal fade" id="cropperModal" tabindex="-1">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Crop Image</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    <div style="width: 100%; max-height: 400px;">
                                        <img id="cropperImage" style="width: 100%;">
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button id="cropImage" class="btn btn-primary">Crop & Save</button>
                                </div>
                            </div>
                        </div>
                    </div>


                    
                                    </div>
                                </div>
        </section> <!-- content-main end// -->
            <!-- Add Bootstrap & Cropper.js Scripts -->
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
                    <script>
                    document.getElementById("addProduct12e").classList.add("active");

                        document.querySelectorAll(".img-input").forEach((input) => {
                    const index = input.dataset.index;
                    const previewImage = document.querySelector(`.img-preview[data-index="${index}"]`);
                    const removeButton = document.querySelector(`.remove-image[data-index="${index}"]`);
                    let cropper;
                    let selectedFile;

                    input.addEventListener("change", function (event) {
                        const file = event.target.files[0];

                        if (file) {
                            selectedFile = file;
                            const reader = new FileReader();

                            reader.onload = function (e) {
                                document.getElementById("cropperImage").src = e.target.result;
                                new bootstrap.Modal(document.getElementById("cropperModal")).show();

                                setTimeout(() => {
                                    cropper = new Cropper(document.getElementById("cropperImage"), {
                                        viewMode: 1,
                                        movable: true,
                                        zoomable: true,
                                        rotatable: true,
                                        scalable: true
                                    });
                                }, 500);
                            };

                            reader.readAsDataURL(file);
                        }
                    });

                    document.getElementById("cropImage").addEventListener("click", function () {
                        if (cropper) {
                            const canvas = cropper.getCroppedCanvas();
                            previewImage.src = canvas.toDataURL();
                            cropper.destroy();
                            bootstrap.Modal.getInstance(document.getElementById("cropperModal")).hide();
                        }
                    });

                    removeButton.addEventListener("click", function () {
                        previewImage.src = "../../assets/imgs/theme/upload.svg";
                        input.value = "";
                    });
                });
                
                
                //form data handling

                
                // Collect text input fields
                // formData.append("productName", document.querySelector('input[name="productName"]').value);
                // formData.append("description", document.querySelector('textarea[name="description"]').value);
                // formData.append("regularPrice", document.querySelector('input[name="regularPrice"]').value);
                // formData.append("promotionalPrice", document.querySelector('input[name="promotionalPrice"]').value);
                // formData.append("brand", document.querySelector('select[name="brand"]').value);
                // formData.append("category", document.querySelector('select[name="category"]').value);
                // formData.append("cubeSize", document.querySelector('select[name="cubeSize"]').value);
               // formData.append("tags", document.querySelectorAll('input[type="text"]')[3].value);
            
                // Collect images
                // Prevent default form submission
               // console.log('ji')
document.querySelector("#productForm").addEventListener("submit", async function (event) {
    event.preventDefault();
    Swal.fire({
        title:'Confirm To Add New Product!',
        text:'Please Confirm!!',
        icon:'warning',
        showCancelButton:true,
        confirmButtonText:'Yes! Add New Product'
    }).then((async result1=>{
        if(result1.isConfirmed){
            //loading alert
            Swal.fire({
                title:'Adding New Product !',
                text:'Please wait...',
                allowOutsideClick:false,
                didOpen: ()=>{
                    Swal.showLoading()
                }
            })
            
            let formData = new FormData(this);
            
            let images = document.querySelectorAll('.img-input');
            let hasImage = false;
            
            images.forEach((input) => {
                if (input.files.length > 0) {
                    formData.append("productImages", input.files[0]);
                    hasImage = true;
                }
            });
            
            if (!hasImage) {
                alert("At least one image is required!");
                return;
            }
            // console.log([...formData])
            
            try {
                let response = await fetch("/admin/addProduct", {
                    method: "POST",
                    body: formData,
                    
                });
                
                let result = await response.json();
                
                if (result.success) {
                    Swal.fire("Success!", "Product added successfully!", "success")
                    setTimeout(()=>{
                        window.location.href = "/admin/addProduct"// Redirect to add product page
                    },1500)
                    
                    
                    
                } else {
                    Swal.fire("Error!", result.message || "Something went wrong.", "error");
                }
            } catch (error) {
                console.error("Error:", error);
                Swal.fire("Error!", "Failed to add product.", "error");
            }
        }
    }))
});
</script>


                
      <%- include('partials/footer.ejs') %>