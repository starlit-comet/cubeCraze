<%-include ('partials/headSection.ejs') %>

    <div class="screen-overlay"></div>
    <%-include('partials/sidebar.ejs') %>
    <main class="main-wrap">

    <%-include('partials/header.ejs')  %>


    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Order List </h2>
                <p>Lorem ipsum dolor sit amet.</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-9">
                <div class="card mb-4">
                    <header class="card-header">
                        <div class="row gx-3">
                            <div class="col-lg-4 col-md-6 me-auto">
                                <input type="text" placeholder="Search..." class="form-control">
                            </div>
                            <div class="col-lg-2 col-md-3 col-6">
                                <select class="form-select">
                                    <option>Status</option>
                                    <option>Active</option>
                                    <option>Disabled</option>
                                    <option>Show all</option>
                                </select>
                            </div>
                            <div class="col-lg-2 col-md-3 col-6">
                                <select class="form-select">
                                    <option>Show 20</option>
                                    <option>Show 30</option>
                                    <option>Show 40</option>
                                </select>
                            </div>
                        </div>
                    </header> <!-- card-header end// -->
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr> <th>Sl.No</th>
                                        <th>ID</th>
                                        <th>Customer name</th>
                                        <th>Price</th>
                                        <th>Status</th>
                                        <th>Date & Time</th>
                                        <th class="text-end"> Action </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% orders.forEach((item,index)=>{  %>
                                    <tr 
                                    <% if(item.orderedItems.some(product=>product.status==='Return Requested' )) { %>
                                        style="background-color: rgba(191, 34, 23, 0.338);"
                                        <% }%>
                                    >
                                        <td><%= index+1 %></td>
                                        <td><a href="">orderId</a></td>
                                        <td><b><a href="/admin/customer"><%= item.address.fullname %></a></b></td>
                                        <td>â‚¹ <%= item.finalAmount %></td>
                                        <td><span class=" "><%= item.status %><br>
                                            <% if(item.orderedItems.some(product=>product.status==='Return Requested' )) { %>
                                                Return Request Found
                                                <% }%>
                                        </span></td>
                                        <td>  <% const options = {
                                            hour: 'numeric',
                                            hour12: true,     
                                            minute: '2-digit',
                                            weekday: 'short', 
                                            year: 'numeric',  
                                            month: 'short',   
                                            day: 'numeric',  
                                          };
                                           %>
                                        <% const formattedDate = item.invoiceDate.toLocaleString('en-US', options); %>
                                          <%= formattedDate %></td>
                                        <td class="text-end">
                                            <a href="/admin/orderDetail/<%= item.orderId %>" class="btn btn-md rounded font-sm">Detail</a>
                                            <div class="dropdown">
                                                <a href="#" data-bs-toggle="dropdown" class="btn btn-light rounded btn-sm font-sm"> <i class="material-icons md-more_horiz"></i> </a>
                                                <div class="dropdown-menu">
                                                    <a class="dropdown-item" href="#">View detail</a>
                                                    <a class="dropdown-item" href="#">Edit info</a>
                                                    <a class="dropdown-item text-danger" href="#">Delete</a>
                                                </div>
                                            </div>  
                                        </td>
                                    </tr>
                                    <% }) %>
                                    
                                </tbody>
                            </table>
                        </div> <!-- table-responsive //end -->
                    </div> <!-- card-body end// -->
                </div> <!-- card end// -->
            </div>
            <div class="col-md-3">
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="mb-3">Generate Report </h5>
                        <form id="salesReportForm">
                            <div class="mb-4">
                                <label for="dateRange" class="form-label">Select Range</label>
                                <select id="dateRange" class="form-control" onchange="updateDateRange()">
                                    <option value="all" selected>All Time</option>
                                    <option value="1day">Last 1 Day</option>
                                    <option value="7days">Last Week</option>
                                    <option value="1month">Last Month</option>
                                    <option value="6months">Last 6 Months</option>
                                    <option value="1year">Last Year</option>
                                    <option value="custom">Custom Date Range</option>

                                </select>
                            </div>
                        
                            <div class="mb-4">
                                <label for="order_created_date" class="form-label">From</label>
                                <input type="date" class="form-control" id="order_created_date">
                            </div>
                            
                            <div class="mb-4">
                                <label for="order_modified_date" class="form-label">To</label>
                                <input type="date" class="form-control" id="order_modified_date">
                            </div>
                        
                            <div class="mb-4">
                                <label class="form-label">Select File Type</label>
                                <div>
                                    <input type="radio" id="file_excel" name="file_type" value="excel" checked>
                                    <label for="file_excel">Excel</label>
                                    
                                    <input type="radio" id="file_pdf" name="file_type" value="pdf">
                                    <label for="file_pdf">PDF</label>
                                </div>
                            </div>
                        
                            <div class="mb-4">
                                <button type="button" class="btn btn-primary" onclick="generateReport()">Generate Report</button>
                            </div>
                        </form>
                        
                    </div>
                </div> <!-- card end// -->
            </div>
        </div>
        <div class="pagination-area mt-15 mb-50">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-start">
                    <li class="page-item active"><a class="page-link" href="#">01</a></li>
                    <li class="page-item"><a class="page-link" href="#">02</a></li>
                    <li class="page-item"><a class="page-link" href="#">03</a></li>
                    <li class="page-item"><a class="page-link dot" href="#">...</a></li>
                    <li class="page-item"><a class="page-link" href="#">16</a></li>
                    <li class="page-item"><a class="page-link" href="#"><i class="material-icons md-chevron_right"></i></a></li>
                </ul>
            </nav>
        </div>
    </section> <!-- content-main end// -->


    <script>
        document.getElementById("orders12e").classList.add("active");
    
        document.addEventListener("DOMContentLoaded", () => {
    updateDateRange(); // Set "All Time" behavior on load
});
function updateDateRange() {
    const dateRange = document.getElementById("dateRange").value;
    const fromDateInput = document.getElementById("order_created_date");
    const toDateInput = document.getElementById("order_modified_date");

    const today = new Date();
    let fromDate = new Date();

    switch (dateRange) {
        case "1day":
            fromDate.setDate(today.getDate() - 1);
            break;
        case "7days":
            fromDate.setDate(today.getDate() - 7);
            break;
        case "1month":
            fromDate.setMonth(today.getMonth() - 1);
            break;
        case "6months":
            fromDate.setMonth(today.getMonth() - 6);
            break;
        case "1year":
            fromDate.setFullYear(today.getFullYear() - 1);
            break;
        case "all":
            fromDateInput.value = "";
            toDateInput.value = "";
            fromDateInput.disabled = true;
            toDateInput.disabled = true;
            return;
        case "custom":
            fromDateInput.disabled = false;
            toDateInput.disabled = false;
            fromDateInput.value = "";
            toDateInput.value = "";
            return;
    }

    fromDateInput.value = fromDate.toISOString().split("T")[0];
    toDateInput.value = today.toISOString().split("T")[0];
    fromDateInput.disabled = false;
    toDateInput.disabled = false;
}

function validateDates() {
    const fromDate = document.getElementById("order_created_date").value;
    const toDate = document.getElementById("order_modified_date").value;
    const today = new Date().toISOString().split("T")[0];

    if (!fromDate || !toDate) {
        Swal.fire({
            icon: "warning",
            title: "Invalid Date Range",
            text: "Please select both From and To dates.",
        });
        return false;
    }

    if (new Date(fromDate) > new Date(toDate)) {
        Swal.fire({
            icon: "error",
            title: "Invalid Date Selection",
            text: "The From date cannot be later than the To date.",
        });
        return false;
    }

    if (toDate > today) {
        Swal.fire({
            icon: "error",
            title: "Invalid To Date",
            text: "The To date cannot be in the future.",
        });
        return false;
    }

    const minRange = new Date(fromDate);
    minRange.setDate(minRange.getDate() + 1); // At least one day difference

    if (new Date(toDate) < minRange) {
        Swal.fire({
            icon: "error",
            title: "Minimum Range Required",
            text: "The date range must be at least one day.",
        });
        return false;
    }

    return true;
}

function generateReport() {
    const dateRange = document.getElementById("dateRange").value;
    const fromDate = document.getElementById("order_created_date").value;
    const toDate = document.getElementById("order_modified_date").value;
    const fileType = document.querySelector('input[name="file_type"]:checked').value;

    let queryParams = new URLSearchParams({ fileType });

    // If not "All Time", validate and include date range
    if (dateRange !== "all") {
        if (!validateDates()) {
            return;
        }
        queryParams.append("fromDate", fromDate);
        queryParams.append("toDate", toDate);
    }

    // Construct the URL
    const reportUrl = `/admin/Sales-Report?${queryParams.toString()}`;

    Swal.fire({
        icon: "success",
        title: "Generating Report",
        text: `Your ${fileType.toUpperCase()} report is being generated.`,
        showConfirmButton: false,
        timer: 2000
    }).then(() => {
        window.open(reportUrl, "_blank");
    });
}

   </script>
        
        <%- include('partials/footer.ejs') %>