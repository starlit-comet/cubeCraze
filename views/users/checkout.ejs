<%- include('partials/headSection.ejs') %>
</head>

<body>
    <%- include('partials/header.ejs') %>

    <%- include('partials/mobileMenu.ejs') %>
   

<main class="main">
        <div class="page-header breadcrumb-wrap" >
            <div class="container">
                <div class="breadcrumb">
                    <a href="home" rel="nofollow">Home</a>
                    <span></span> <a href="/profile" rel="nofollow">Profile</a>

                    <span></span> <a href="/cart" rel="nofollow">Cart</a>
                    <span></span> CheckOut
                </div>
            </div>
        </div>

        <section class="mt-50 mb-50">
            <div class="container">
               
                <div class="row">
                    <div class="col-md-7 ">
                        <div class="mb-25">
                            <h3>Billing Details</h3>
                            <h6>Choose your Address or Add a new one</h6>
                        </div>
                         <form id = 'checkoutForm'>
                            <div class="row">

                                <% addressData.forEach((data,index)=> {  %>
                                    <div class="col-lg-6 mt-20">
                                    <div class="card mb-3 mb-lg-0">
                                        <div class="card-header">
                                            <div class="row">
                                                <div class="col-10">

                                                    <h5 class="mb-0"><%= data.addressType %> Address 
                                                    </h5>
                                                </div>
                                                <div class="col-2">

                                                    <input type="radio"style="height: min-content;" class="text-end " name="selectedAddress" value="<%= data._id %>" <%= index === 0 ? 'checked' : '' %> />
                                                </div>
                                            </div>

                                        </div>
                                        <div class="card-body">
                                            <address><%= data.fullname %><br> <%= data.house_flat %>,&nbsp;  <%= data.street %><br> <%= data.village_city %>. <br><%= data.district %>
                                            ,<%= data.state %>,<br> PIN Code: <%= data.pincode %>
                                            <% if (data.landmark){ %>
                                                <br>LandMark: <%= data.landmark %>
                                            <%}%>
                                            <br>Phone: <%= data.mobile %>
                                            <% if (data.alt_phone){ %>
                                                <br>Alternate Number: <%= data.alt_phone %>
                                            <%}%>

                                        </address>
                                        <!-- <p>New York</p> -->
                                        <div class="row">

                                                 <button class="btn btn-fill-out btn-small mt-20 col-4 ml-20" type="button" onclick="window.location.href='/editAddress/<%=data._id%>'"> Edit</button>
                                                 <!-- <button class="btn btn-fill-out btn-small mt-20 col-5 ml-20" type="button" onclick="deleteAddress('<%= data._id %>')"> Remove</button> -->
                                                </div>
                                        </div>
                                    </div>
                                </div>
                                <% }) %>
                            </div>
                            <div class="ship_detail mt-20">
                                <div class="form-group">
                                    <div class="chek-form">
                                        <div class="custome-checkbox">
                                            <input class="form-check-input"  type="checkbox" name="selectedAddress" id="differentaddress">
                                            <label class="form-check-label label_info" data-bs-toggle="collapse" data-target="#collapseAddress" href="#collapseAddress" aria-controls="collapseAddress" for="differentaddress"><span>Ship to a different address?</span></label>
                                        </div>
                                    </div>
                                </div>
                                <div id="collapseAddress" class="different_address collapse in">
                                    <div class="col-md-12 mt-15 mb-20 form-group">
                                        <a  class="btn btn-fill-out" href='/add-new-Address' >Add New Address</a>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-20">
                                <h5>Additional information</h5>
                            </div>
                            <div class="form-group mb-30">
                                <textarea rows="5" id="additionalInformation" placeholder="Order notes"></textarea>
                            </div>
                </div>
                    <div class="col-md-5">
                        <div class="order_review">
                            <div class="mb-10">
                                <h4>Your Orders</h4>
                            </div>
                            <div class="table-responsive order_table text-center">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Product</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                       
                                        <% cart.forEach(item=>{  %>
                                        <tr>
                                            <td class="image product-thumbnail"><img src="<%= item.productImages[0] %>" alt="#"></td>
                                            <td>
                                                <h5><a href=""><%= item.productName%></a></h5> <span class="product-qty">₹ <%= item.promotionalPrice %> x <%= item.cartQuantity %></span>
                                            </td>
                                            <td><%= item.cartQuantity * item.promotionalPrice %></td>
                                        </tr>
                                        <%})%>
                                        <tr>
                                            <td >Cost of Products</td>
                                            <td>No.of Items: <%= totalQuantity%></td>
                                            <td> ₹ <%= totalAmount %></td>

                                        </tr>

                                        <tr>
                                            <td > <b>Final Price</b></td>
                                            <td>Shipping Charge: <%= shipping%></td>
                                            <td> ₹ <%= grandTotal %></td>

                                        </tr>
                                       
                                    </tbody>
                                </table>
                            </div>
                            <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                            <div class="payment_method">
                                <div class="mb-25">
                                    <h5>Choose Payment Type</h5>
                                </div>
                                <div class="payment_option">
                                    <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios1" value="razorpay" checked="">
                                        <label class="form-check-label" for="exampleRadios1" data-bs-toggle="collapse" data-target="#razorpay" aria-controls="razorpay">Pay Now - Via RazorPay (UPI, CardPayments or Net Banking)</label>
                                        
                                    </div>
                                    <!-- <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios1" value="upi" checked="">
                                        <label class="form-check-label" for="exampleRadios1" data-bs-toggle="collapse" data-target="#upi" aria-controls="upi">UPI</label>
                                        
                                    </div> -->
                                    <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios2" value="cod" checked="">
                                        <label class="form-check-label" for="exampleRadios2" data-bs-toggle="collapse" data-target="#cod" aria-controls="cod">Cash on Delivery (COD)</label>
                                        
                                    </div>
                                    <!--
                                    <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios3" value="netBanking" checked="">
                                        <label class="form-check-label" for="exampleRadios3" data-bs-toggle="collapse" data-target="#netBanking" aria-controls="netBanking">Net Banking</label>
                                         <div class="form-group collapse in" id="bankTranfer">
                                            <p class="text-muted mt-5">There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration. </p>
                                        </div>
                                    </div>
                                    -->
                                    <!-- <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios4" value="cardPayment" checked="">
                                        <label class="form-check-label" for="exampleRadios4" data-bs-toggle="collapse" data-target="#cardPayment" aria-controls="cardPayment">Credit or Debit Card</label>
                                        
                                    </div> -->
                                    <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios5" value="wallet" checked="">
                                        <label class="form-check-label" for="exampleRadios5" data-bs-toggle="collapse" data-target="#wallet" aria-controls="wallet">Pay from Wallet</label>
                                        
                                    </div>
                                    <!-- <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios5" checked="">
                                        <label class="form-check-label" for="exampleRadios5" data-bs-toggle="collapse" data-target="#paypal" aria-controls="paypal">Paypal</label>
                                        
                                    </div> -->
                                   
                                </div>
                            </div>
                            <button type="submit"  class="btn btn-fill-out btn-block mt-30">Place Order</button>
                        </div>
                    </form> 

                    </div>
                </div>
            </div>
        </section>
        </main>
    



        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

        <script>

            let grandTotal = <%= grandTotal %> ;
           var userData = {
            name: '<%= userData.name %>',
            phone:'<%= userData.phone %>',
            email:'<%= userData.email %>',
            _id:'<%= userData._id %>',
           }
        document.getElementById('checkoutForm').addEventListener('submit', async function (event) {
          event.preventDefault();
          await submitCheckout();
        });
        
        async function submitCheckout() {
          try {
            const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
            const paymentOption = document.querySelector('input[name="payment_option"]:checked');
            const additionalInfo = document.getElementById('additionalInformation')?.value || '';
        
            if (!selectedAddress) {
              Swal.fire({
                icon: 'warning',
                title: 'No Address Selected',
                text: 'Please select an address before placing the order.'
              });
              return;
            }
        
            if (!paymentOption) {
              Swal.fire({
                icon: 'warning',
                title: 'No Payment Option',
                text: 'Please select a payment option before placing the order.'
              });
              return;
            }
        
            const formData = {
              grandTotal,userData,
              addressId: selectedAddress.value,
              paymentType: paymentOption.value,
              additionalInformation: additionalInfo
            };
            console.log(formData)
        
            if (paymentOption.value === 'cod') {
              const confirmation = await Swal.fire({
                title: 'Confirm Order?',
                text: 'Do you want to place this order?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, place order!'
              });
        
              if (!confirmation.isConfirmed) return;
              console.log('formdata for cod',formData)
              await placeOrder(formData);
        
            }
             else if (paymentOption.value === 'razorpay') {
        
              const confirmation = await Swal.fire({
                title: 'Make Payment?',
                text: 'You will be redirected to Razorpay to complete the payment.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed to payment!'
              });
        
              if (!confirmation.isConfirmed) return;
        
              // Process Razorpay payment and get status
              const razorpayResult = await payNow(formData);
              
              console.log('razorpayresult',razorpayResult)

              if (razorpayResult && razorpayResult.paymentVerified) {
                // Append Razorpay payment details to the formData
                formData.razorpayOrderId = razorpayResult.razorpay_order_id;
                formData.razorpayPaymentId = razorpayResult.razorpay_payment_id;
                formData.paymentType = 'razorpay';
                formData.userData=userData
        
                console.log(formData,'formdaga')
                await placeOrder(formData);
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Payment Failed',
                  text: 'Payment was not successful or verification failed.'
                });
              }
            }
          } catch (error) {
            console.error('Checkout error:', error);
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'An unexpected error occurred. Please try again later.'
            });
          }
        }
        
        // Function to place an order (for both COD and Razorpay)
        async function placeOrder(formData) {
          try {
            const response = await fetch('/createOrder', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(formData)
            });
        
            const result = await response.json();
        
            if (response.ok) {
              await Swal.fire({
                icon: 'success',
                color: '#06b406',
                title: 'Order Placed!',
                text: 'Your order has been placed successfully.',
                background: 'url(https://static.licdn.com/aero-v1/sc/h/f55std566o6x1mr1opdy220oi?1741952662218)',
                backdrop: `rgba(24, 19, 18, 0.53)`
              });
              window.location.href = `/viewOrder/${result.orderId}`;
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Order Failed',
                text: result.message || 'Something went wrong. Please try again.'
              });
            }
          } catch (error) {
            console.error('Order error:', error);
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Unable to place the order. Please try again later.'
            });
          }
        }
        
        // Razorpay payment flow
        async function payNow(formData) {
          try {
            const response = await fetch('/create-razorpay-order', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({

                amount: formData.grandTotal, 
                currency: 'INR',
                receipt: 'receipt#1',
                notes: {user:formData.userData._id},formData
              })
            });
        
            const order = await response.json();
        
            if (!order || !order.id) {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Failed to create Razorpay order.'
              });
              return null;
            }
        
            return new Promise((resolve) => {
              const options = {
                key: 'rzp_test_43w6NpS9BBjZU4',
                amount: order.amount,
                currency: order.currency,
                name: 'CUBECRAZE',
                description: 'Test Transaction',
                order_id: order.id,
                handler: async function (response) {
                  try {
                    const verifyRes = await fetch('/verify-razorpay-payment', {
                      method: 'POST',
                      headers: {
                        'Content-Type': 'application/json'
                      },
                      body: JSON.stringify({
                        razorpay_order_id: response.razorpay_order_id,
                        razorpay_payment_id: response.razorpay_payment_id,
                        razorpay_signature: response.razorpay_signature
                      })
                    });
        
                    const verifyResult = await verifyRes.json();
        
                    if (verifyResult.status === 'ok') {
                      resolve({
                        paymentVerified: true,
                        razorpay_order_id: response.razorpay_order_id,
                        razorpay_payment_id: response.razorpay_payment_id
                      });
                    } else {
                      resolve({ paymentVerified: false });
                    }
                  } catch (error) {
                    console.error('Verification error:', error);
                    resolve({ paymentVerified: false });
                  }
                },
                prefill: {
                  name: userData.name,
                  email: userData.email,
                  contact: userData.phone
                },
                theme: {
                  color: '#F27254'
                }
              };
        
              const rzp = new Razorpay(options);
              rzp.open();
            });
        
          } catch (error) {
            console.error('Razorpay error:', error);
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Failed to initiate payment. Please try again.'
            });
            return null;
          }
        }
        </script>
        

  

    <%- include('partials/scriptTags.ejs') %>
</body>
