<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details | CubeCraze</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2ecc71;
            --danger-color: #e74c3c;
            --warning-color: #f39c12;
            --dark-color: #2c3e50;
            --light-color: #ecf0f1;
            --border-color: #e0e0e0;
            --text-color: #333;
            --text-light: #777;
            --shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            --radius: 8px;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: #f8f9fa;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 20px;
        }
        
        .order-title {
            font-size: 24px;
            font-weight: 600;
        }
        
        .order-id {
            color: var(--text-light);
            font-size: 16px;
            margin-top: 5px;
        }
        
        .order-actions {
            display: flex;
            gap: 10px;
        }
        
        .btn {
            padding: 10px 20px;
            border-radius: var(--radius);
            border: none;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }
        
        .btn-primary:hover {
            background-color: #2980b9;
        }
        
        .btn-outline {
            background-color: transparent;
            border: 1px solid var(--border-color);
            color: var(--text-color);
        }
        
        .btn-outline:hover {
            background-color: #f5f5f5;
        }
        
        .card {
            background-color: white;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            margin-bottom: 30px;
            overflow: hidden;
        }
        
        .card-header {
            padding: 20px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .card-title {
            font-size: 18px;
            font-weight: 600;
        }
        
        .card-body {
            padding: 20px;
        }
        
        .order-progress {
            position: relative;
            display: flex;
            justify-content: space-between;
            margin: 40px 0;
            padding: 0 40px;
        }
        
        .progress-line {
            position: absolute;
            top: 30px;
            left: 50px;
            right: 50px;
            height: 4px;
            background-color: var(--border-color);
            z-index: 1;
        }
        
        .progress-line-active {
            position: absolute;
            top: 30px;
            left: 50px;
            height: 4px;
            background-color: var(--secondary-color);
            z-index: 2;
            transition: width 0.5s ease;
        }
        
        .progress-step {
            position: relative;
            z-index: 3;
            text-align: center;
            width: 20%;
        }
        
        .step-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: white;
            border: 3px solid var(--border-color);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 15px;
            font-size: 24px;
            color: var(--text-light);
            transition: all 0.3s ease;
        }
        
        .step-active .step-icon {
            border-color: var(--secondary-color);
            background-color: var(--secondary-color);
            color: white;
        }
        
        .step-completed .step-icon {
            border-color: var(--secondary-color);
            background-color: var(--secondary-color);
            color: white;
        }
        
        .step-title {
            font-weight: 600;
            margin-bottom: 5px;
        }
        
        .step-date {
            font-size: 12px;
            color: var(--text-light);
        }
        
        .order-details-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .detail-box {
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: var(--radius);
            border: 1px solid var(--border-color);
        }
        
        .detail-title {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid var(--border-color);
        }
        
        .detail-content p {
            margin-bottom: 8px;
        }
        
        .detail-label {
            font-weight: 500;
            display: inline-block;
            min-width: 120px;
        }
        
        .order-items {
            margin-top: 30px;
        }
        
        .item-table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .item-table th {
            text-align: left;
            padding: 12px 15px;
            background-color: #f5f5f5;
            border-bottom: 1px solid var(--border-color);
        }
        
        .item-table td {
            padding: 12px 15px;
            border-bottom: 1px solid var(--border-color);
        }
        
        .item-status {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
        }
        
        .status-pending {
            background-color: #fff8e1;
            color: #f57c00;
        }
        
        .status-processing {
            background-color: #e3f2fd;
            color: #1976d2;
        }
        
        .status-shipped {
            background-color: #e8f5e9;
            color: #388e3c;
        }
        
        .status-delivered {
            background-color: #e8f5e9;
            color: #388e3c;
        }
        
        .status-cancelled {
            background-color: #ffebee;
            color: #d32f2f;
        }
        
        .order-summary {
            margin-top: 30px;
            background-color: #f9f9f9;
            border-radius: var(--radius);
            padding: 20px;
        }
        
        .summary-row {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid var(--border-color);
        }
        
        .summary-row:last-child {
            border-bottom: none;
        }
        
        .summary-label {
            font-weight: 500;
        }
        
        .summary-total {
            font-size: 18px;
            font-weight: 600;
            color: var(--primary-color);
        }
        
        .order-notes {
            margin-top: 20px;
            padding: 15px;
            background-color: #fff8e1;
            border-radius: var(--radius);
            border-left: 4px solid var(--warning-color);
        }
        
        .order-cancelled {
            margin-top: 20px;
            padding: 15px;
            background-color: #ffebee;
            border-radius: var(--radius);
            border-left: 4px solid var(--danger-color);
            color: var(--danger-color);
            font-weight: 500;
        }
        
        @media (max-width: 768px) {
            .order-progress {
                flex-direction: column;
                align-items: flex-start;
                padding: 0;
                margin-left: 30px;
            }
            
            .progress-line, .progress-line-active {
                top: 0;
                bottom: 0;
                left: 30px;
                right: auto;
                width: 4px;
                height: auto;
            }
            
            .progress-step {
                width: 100%;
                display: flex;
                align-items: center;
                text-align: left;
                margin-bottom: 30px;
            }
            
            .step-icon {
                margin: 0 20px 0 0;
            }
            
            .order-actions {
                width: 100%;
                justify-content: flex-end;
            }
        }
        
        @media (max-width: 576px) {
            .order-header {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .order-actions {
                justify-content: flex-start;
            }
            
            .btn {
                padding: 8px 16px;
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="order-header">
            <div>
                <h1 class="order-title">Order Details</h1>
                <p class="order-id">Order ID: <%= order.orderId %></p>
            </div>
            <div class="order-actions">
                <!-- <button class="btn btn-outline" onclick="window.print()">
                    <i class="fas fa-print"></i> Print
                </button> -->
                <button id="printInvoiceBtn" class="btn btn-outline"><i class="fas fa-print"></i>Print Invoice</button>

                <a href="/profile" class="btn btn-primary">
                    <i class="fas fa-arrow-left"></i> Back to Orders
                </a>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">Order Status</h2>
                <span class="item-status status-<%= order.status.toLowerCase() %>">
                    <%= order.status %>
                </span>
            </div>
            <div class="card-body">
                <% if (order.status === 'Cancelled') { %>
                    <div class="order-cancelled">
                        <i class="fas fa-exclamation-circle"></i>
                        This order has been cancelled
                        <% if (order.cancellationReason) { %>
                            - Reason: <%= order.cancellationReason %>
                        <% } %>
                    </div>
                <% } else { %>
                    <div class="order-progress">
                        <div class="progress-line"></div>
                        <div class="progress-line-active" id="progressLineActive"></div>
                        
                        <% 
                        const steps = [
                            { title: 'Pending', icon: 'fa-clock' },
                            { title: 'Processing', icon: 'fa-cogs' },
                            { title: 'Shipped', icon: 'fa-truck' },
                            { title: 'Delivered', icon: 'fa-box-open' }
                        ];
                        
                        const statusIndex = {
                            'Pending': 0,
                            'Processing': 1,
                            'Paid': 1,
                            'Shipped': 2,
                            'Delivered': 3,
                            'Cancelled': -1,
                            'Return Request': -1,
                            'Returned': -1
                        };
                        
                        const currentIndex = statusIndex[order.status] || 0;
                        %>
                        
                        <% steps.forEach((step, index) => { %>
                            <div class="progress-step <%= index === currentIndex ? 'step-active' : '' %> <%= index < currentIndex ? 'step-completed' : '' %>">
                                <div class="step-icon">
                                    <i class="fas <%= step.icon %>"></i>
                                </div>
                                <div class="step-info">
                                    <div class="step-title"><%= step.title %></div>
                                    <% if (index <= currentIndex) { %>
                                        <div class="step-date">
                                            <% if (index === 0) { %>
                                                <%= new Date(order.createdOn).toLocaleDateString() %>
                                            <% } else { %>
                                                <%= index === currentIndex ? 'In Progress' : 'Completed' %>
                                            <% } %>
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } %>
            </div>
        </div>
        
        <div class="order-details-grid">
            <div class="detail-box">
                <h3 class="detail-title">Customer Information</h3>
                <div class="detail-content">
                    <p><span class="detail-label">Name:</span> <%= order.address.fullname %></p>
                    <p><span class="detail-label">Phone:</span> <%= order.address.mobile %></p>
                    <% if (order.address.alt_phone) { %>
                        <p><span class="detail-label">Alt Phone:</span> <%= order.address.alt_phone %></p>
                    <% } %>
                    <p><span class="detail-label">Address Type:</span> <%= order.address.addressType %></p>
                </div>
            </div>
            
            <div class="detail-box">
                <h3 class="detail-title">Shipping Address</h3>
                <div class="detail-content">
                    <p><%= order.address.house_flat %></p>
                    <p><%= order.address.street %>, <%= order.address.village_city %></p>
                    <% if (order.address.landmark) { %>
                        <p>Landmark: <%= order.address.landmark %></p>
                    <% } %>
                    <p><%= order.address.district %>, <%= order.address.state %> - <%= order.address.pincode %></p>
                </div>
            </div>
            
            <div class="detail-box">
                <h3 class="detail-title">Order Information</h3>
                <div class="detail-content">
                    <p><span class="detail-label">Order Date:</span> <%= new Date(order.createdOn).toLocaleString() %></p>
                    <p><span class="detail-label">Payment Method:</span> <%= order.paymentMethod %></p>
                    <% if (order.paymentDetails && order.paymentDetails.transactionId) { %>
                        <p><span class="detail-label">Transaction ID:</span> <%= order.paymentDetails.transactionId %></p>
                    <% } %>
                    <p><span class="detail-label">Total Items:</span> <%= order.totalQuantity %></p>
                </div>
            </div>
        </div>
        
        <div class="card order-items">
            <div class="card-header">
                <h2 class="card-title">Order Items</h2>
            </div>
            <div class="card-body">
                <table class="item-table">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Status</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% order.orderedItems.forEach(item => { %>
                            <tr>
                                <td>
                                    <% if (item.product && item.product.name) { %>
                                        <%= item.product.name %>
                                    <% } else { %>
                                        Product ID: <%= item.product %>
                                    <% } %>
                                </td>
                                <td><%= item.quantity %></td>
                                <td>₹<%= item.price.toFixed(2) %></td>
                                <td>
                                    <span class="item-status status-<%= item.status.toLowerCase() %>">
                                        <%= item.status %>
                                    </span>
                                </td>
                                <td>₹<%= (item.price * item.quantity).toFixed(2) %></td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
                
                <div class="order-summary">
                    <div class="summary-row">
                        <span class="summary-label">Subtotal</span>
                        <span>₹<%= order.totalPrice.toFixed(2) %></span>
                    </div>
                    <% if (order.discount > 0) { %>
                        <div class="summary-row">
                            <span class="summary-label">Discount</span>
                            <span>-₹<%= order.discount.toFixed(2) %></span>
                        </div>
                    <% } %>
                    <% if (order.shippingCharge > 0) { %>
                        <div class="summary-row">
                            <span class="summary-label">Shipping</span>
                            <span>₹<%= order.shippingCharge.toFixed(2) %></span>
                        </div>
                    <% } %>
                    <div class="summary-row">
                        <span class="summary-label">Total</span>
                        <span class="summary-total">₹<%= order.finalAmount.toFixed(2) %></span>
                    </div>
                </div>
                
                <% if (order.orderNotes) { %>
                    <div class="order-notes">
                        <strong>Order Notes:</strong> <%= order.orderNotes %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set progress line width based on current status
            const progressLine = document.getElementById('progressLineActive');
            if (progressLine) {
                const steps = [
                    'Pending', 'Processing', 'Paid', 'Shipped', 'Delivered'
                ];
                
                const currentStatus = '<%= order.status %>';
                const statusIndex = {
                    'Pending': 0,
                    'Processing': 1,
                    'Paid': 1,
                    'Shipped': 2,
                    'Delivered': 3,
                    'Cancelled': -1,
                    'Return Request': -1,
                    'Returned': -1
                };
                
                const currentIndex = statusIndex[currentStatus] || 0;
                const totalSteps = 4; // Number of steps in the progress bar
                
                if (currentIndex >= 0) {
                    const progressPercentage = (currentIndex / (totalSteps - 1)) * 100;
                    progressLine.style.width = `${progressPercentage} %`;
                }
            }
            
            // Format dates
            const formatDates = () => {
                const dateElements = document.querySelectorAll('.date-format');
                dateElements.forEach(el => {
                    const dateStr = el.getAttribute('data-date');
                    if (dateStr) {
                        const date = new Date(dateStr);
                        el.textContent = date.toLocaleDateString('en-US', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric'
                        });
                    }
                });
            };
            
            formatDates();
        });

        
document.getElementById('printInvoiceBtn').addEventListener('click', () => {
  const orderId = '<%= order.orderId  %>'; // replace this dynamically in template
  const downloadUrl = `/order/invoice/${orderId}`;

  // Opens the PDF in a new tab or triggers download
  window.open(downloadUrl, '_blank');
});

document.getElementById('cancelOrderBtn').addEventListener('click', function () {
    const orderId = this.getAttribute('data-order-id');
    const cancelBtn = this;

    Swal.fire({
      title: 'Are you sure?',
      text: "Do you really want to cancel this order?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, cancel it!',
      reverseButtons: true
    }).then((result) => {
      if (result.isConfirmed) {
        // Send async PATCH request
        fetch(`/orders/cancel/${orderId}`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json'
          }
        })
          .then(response => response.json())
          .then(data => {
            if (data.message) {
              Swal.fire({
                title: 'Cancelled!',
                text: data.message,
                icon: 'success'
              });

              // Optionally update status in DOM
              document.getElementById('orderStatus').innerText = 'Cancelled';
              cancelBtn.disabled = true;
              cancelBtn.innerText = 'Order Cancelled';
              cancelBtn.style.backgroundColor = 'gray';
            } else {
              Swal.fire({
                title: 'Failed!',
                text: data.message || 'Something went wrong.',
                icon: 'error'
              });
            }
          })
          .catch(error => {
            console.error(error);
            Swal.fire({
              title: 'Error!',
              text: 'An unexpected error occurred.',
              icon: 'error'
            });
          });
      }
    });
  });
    </script>
</body>
</html>