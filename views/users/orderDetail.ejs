<%- include('partials/headSection.ejs') %>
</head>
<body>
    <%- include('partials/header.ejs') %>
    <%- include('partials/mobileMenu.ejs') %>
<main class="main">
        <div class="page-header breadcrumb-wrap" >
            <div class="container">
                <div class="breadcrumb">
                    <a href="home" rel="nofollow">Home</a>
                    <span></span> <a href="/profile" rel="nofollow">Profile</a>
                    <span></span> Order Detail
                </div>
            </div>
        </div>
        <div class="row mt-15">
            <div class="col-1"></div>
        <section class="content-main col-10 center">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Order Detail</h2>
                    <p>Details for Order ID:<b class="text-danger"> <%= order.orderId %></b>
                    </p>
                </div>
            </div>
            <div class="card">
                <header class="card-header">
                    <div class="row align-items-center">
                        <div class="col-lg-6 col-md-6 mb-lg-0 mb-15">
                            <span>
                                <i class="material-icons md-calendar_today"></i> Order Placed on : <strong class="strong">
                                    <% const options = {
                                        hour: 'numeric',
                                        hour12: true,     
                                        minute: '2-digit',
                                        weekday: 'long', 
                                        year: 'numeric',  
                                        month: 'long',   
                                        day: 'numeric',  
                                      };
                                       %>
                                    <% const formattedDate = order.invoiceDate.toLocaleString('en-US', options); %>
                                      <%= formattedDate %>
                                    </strong>
                            </span> <br>
                            <small class="text-muted">Order ID: <%= order.orderId %></small>
                        </div>
                        </div>
                    </div>
                </header> <!-- card-header end// -->
                <div class="card-body">
                    <div class="row mb-50 mt-20 order-info-wrap">
                        <div class="col-md-3">
                            <article class="icontext align-items-start">
                                <span class="icon icon-sm rounded-circle bg-primary-light">
                                    <i class="text-primary material-icons md-person"></i>
                                </span>
                                <div class="text">
                                    <h6 class="mb-1">Ordered BY</h6>
                                    <p class="mb-1">
                                        <%= order.userData.name  %> <br> <%= order.userData.email  %> <br> <%= order.userData.phone  %>
                                    </p>
                                    <a href="/profile">View profile</a>
                                </div>
                            </article>
                        </div> <!-- col// -->
                        <div class="col-md-5">
                            <article class="icontext align-items-start">
                                <span class="icon icon-sm rounded-circle bg-primary-light">
                                    <i class="text-primary material-icons md-local_shipping"></i>
                                </span>
                                <div class="text">
                                    <h6 class="mb-1">Deliver To</h6>
                                    <p class="mb-1">
                                        <%= order.address.fullname %><br> <%= order.address.house_flat %><br>  <%= order.address.street %>, &nbsp; <%= order.address.village_city %>, &nbsp; <%= order.address.district %>
                                                        ,<%= order.address.state %>,<br> PIN Code: <%= order.address.pincode %>
                                                        <% if (order.address.landmark){ %>
                                                            <br>LandMark: <%= order.address.landmark %>
                                                        <%}%>
                                                        <br>Phone: <%= order.address.mobile %>
                                                        <% if (order.address.alt_phone){ %>
                                                            <br>Alt Num: <%= order.address.alt_phone %>
                                                        <%}%>
                                    </p>
                                </div>
                            </article>
                        </div> <!-- col// -->
                        <div class="col-md-4">
                            <article class="icontext align-items-start">
                                <span class="icon icon-sm rounded-circle bg-primary-light">
                                    <i class="text-primary material-icons md-place"></i>
                                </span>
                                <div class="text">
                                    <h6 class="mb-1">Shipped BY</h6>
                                    <p class="mb-1">
                                        CubeCraze Logistics <br>Block A, House 123, Floor 2 <br> Po Box 678 000
                                    </p>
                                </div>
                            </article>
                        </div> <!-- col// -->
                    </div> <!-- row // -->
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="table-responsive mb-15">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th width ='5%'> Sl.no</th>
                                            <th width="45%" colspan="1">Product</th>
                                            <th width="20">Actions</th>
                                            <th width="10%">Unit Price</th>
                                            <th width="10%">Quantity</th>
                                            <th width="10%" class="text-end">Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% let statusOfAllProducts = [] %>
                                        <% order.orderedItems.forEach((item,index)=>{  %>
                                        <tr>
                                            <td><%= index+1 %></td>
                                            <td>
                                                <a class="itemside" href="#">
                                                    <div class="left">
                                                        <% item.productDetails.images.forEach((img)=>{ %>
                                                        <img src="<%= img %>" width="40" height="40" class="img-xs" alt="Item">
                                                        <% }) %>
                                                    </div>
                                                    <div class="info"> <%= item.productDetails.name %> </div>
                                                    <div class="data">Brand: <%= item.productDetails.brand %>  </div>
                                                    <div class="data">Category: <%= item.productDetails.category %>  </div>
                                                    <% statusOfAllProducts.push(item.status) %>
                                                    <div class="data ">Status : <h5 ><%=item.status %></h5></div>
                                                </a>
                                            </td>
                                            <!-- Modify the Actions column in the table -->
<td>
    <div class="row pt-10 pl-10 pr-10 pb-10 mt-10 mb-10">
        <button onclick="giveReview('<%= order.orderedItems.product %>')" class="btn btn-fill mt-10 pt-10 pl-10 pr-10 pb-10">Give Review</button>
        
        <% if(item.status === 'Delivered') { %>
            <button onclick="requestReturn('<%= item.product %>', '<%= order.orderId %>')" class="btn btn-fill mt-10 pt-10 pl-10 pr-10 pb-10">Request Return</button>
        <% } else if(['Cancelled', 'Returned','Return Cancelled'].includes(item.status)) { %>
            <button class="btn btn-fill mt-10 pt-10 pl-10 pr-10 pb-10" disabled>Action Not Available</button>
     <% } else if(item.status=='Return Requested') { %>
        <button class="btn btn-fill mt-10 pt-10 pl-10 pr-10 pb-10" disabled>Requested for Return</button>

        <% } else { %>
            <button onclick="cancelSingleOrder('<%= item.product %>', '<%= order.orderId %>')" class="btn btn-fill mt-10 pt-10 pl-10 pr-10 pb-10">Cancel Product</button>
        <% } %>
        
        <button onclick="addToCart('<%= order.orderedItems.product %>')" class="btn btn-fill mt-10 pt-10 pl-10 pr-10 pb-10">Buy Again</button>
    </div>
</td>
                                            <td> <%= item.price %> </td>
                                            <td> <%= item.quantity %> </td>
                                            <td class="text-end"> <%= item.price * item.quantity %> </td>
                                        </tr>
                                        <% }) %>
                                        <td colspan="6">
                                            <article class="float-end">
                                                <dl class="dlist">
                                                    <dt>Subtotal :  ₹ <%= order.totalPrice %></dt>
                                                    <!-- <dd>$973.35</dd> -->
                                                </dl>
                                                <dl class="dlist">
                                                    <dt>Shipping cost: ₹ <%= order.shippingCharge %></dt>
                                                    <!-- <dd>$10.00</dd> -->
                                                </dl>
                                                <dl class="dlist">
                                                    <dt>Grand total: <b class="h5">  ₹ <%= order.finalAmount %></b></dt>
                                                    <!-- <dd> <b class="h5">$983.00</b> </dd> -->
                                                </dl>
                                                <dl class="dlist">
                                                    <% if(statusOfAllProducts.every(val=>val===statusOfAllProducts[0]) && ['Processing', 'Shipped', 'Delivered', 'Cancelled', 'Return Requested', 'Returned','Return Cancelled'].some(val=>val===statusOfAllProducts[0]) ){ %>
                                                    <dt class="text-color h4 ">Status: <%= order.status%></dt>
                                                        <%} else { %>
                                                            <dt class="text-color h6 ">Status: Kindly Refer to<br> Individual Product status </dt>

                                                            <% } %>

                                                        <dd>
                                                            <span class="badge rounded-pill alert-success text-success">Payment done</span>
                                                        </dd>
                                                    </dl>
                                                </article>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div> <!-- table-responsive// -->
                            <a class="btn btn-primary" href="/trackOrder/<%= order.orderId %>">View Order Tracking</a>
                            <a class="btn btn-primary" href="/orders">View All Orders</a>

                            <% if(order.status =='Cancelled'){ %>
                            <button id="" class="btn disabled btn-primary"  >
                                    Cancelled
                                  </button>
                                  
                            <% }  else if(order.status =='Delivered'){ %>
                                <button onclick="requestForReturn(`<%= order%>`)" class="btn btn-primary"  >
                                        Request for Return
                                      </button>
                                      
                                <% } else { %>
                                <button id="cancelOrderBtn" class="btn btn-primary" data-order-id="<%= order.orderId %>" >
                                Cancel Order
                              </button>
                                <%}%>
                              <button id="printInvoiceBtn" class="m-0 btn btn-primary"  >
                                Print Invoice
                              </button>  
                        <div class="col-lg-1"></div>
                        <div class="col-lg-4 mt-15">
                            <div class="box shadow-m bg-light">
                                <h4 class="mb-15">Payment info</h4>
                                <p><h6>Payment Method : <%= order.paymentMethod.toUpperCase() %></h6></p>
                                
                            </div>
                            <div class="h-25 pt-4">
                                <div class="mb-3">
                                    <label>Notes</label>
                                    <textarea disabled class="form-control" name="notes" id="notes" placeholder="<%= order.orderNotes %>" ></textarea>
                                </div>
                            </div>
                        </div> <!-- col// -->
                    </div>
                </div> <!-- card-body end// -->
            </div> <!-- card end// -->
        </section>
    </div> <!-- content-main end// -->
        
        </main>
        <script>
            
document.getElementById('printInvoiceBtn').addEventListener('click', () => {
  const orderId = '<%= order.orderId  %>'; 
  const downloadUrl = `/order/invoice/${orderId}`;
  // Opens the PDF in a new tab or triggers download
  window.open(downloadUrl, '_blank');
});

document.getElementById('cancelOrderBtn').addEventListener('click',async function () {
    const orderId = this.getAttribute('data-order-id');
    const cancelBtn = this;

     Swal.fire({
                title: "Select Return Reason",
                html: `
                    <select id="returnReason" class="swal2-select" style="width: 70%; border:solid grey 1px; padding: 10px; margin-top: 10px;">
                        <option value="" disabled selected>Choose a reason</option>
                        <option value="damaged">Product is damaged</option>
                        <option value="wrongItem">Received wrong item</option>
                        <option value="notSatisfied">Not satisfied with the product</option>
                        <option value="other">Other (Specify)</option>
                    </select>
                    <input type="text" id="customReason" class="swal2-input" style="margin-top: 10px; display: none;" placeholder="Enter your reason">
                `,
                showCancelButton: true,
                cancelButtonText: "No",
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, cancel it!',
                reverseButtons: true,
                allowOutsideClick:false,  
                preConfirm: () => {
                    const selectedReason = document.getElementById("returnReason").value;
                    const customReason = document.getElementById("customReason").value.trim();

                    if (!selectedReason) {
                        return Swal.showValidationMessage("Please select a reason.");
                    }

                    if (selectedReason === "other" && !customReason) {
                        return Swal.showValidationMessage("Please enter a custom reason.");
                    }

                    return selectedReason === "other" ? customReason : selectedReason;
                },
                didOpen: () => {
                    const selectBox = document.getElementById("returnReason");
                    const customInput = document.getElementById("customReason");

                    selectBox.addEventListener("change", () => {
                        if (selectBox.value === "other") {
                            customInput.style.display = "block";
                        } else {
                            customInput.style.display = "none";
                        }
                    });
                }
            })
    
    .then((result) => {
      if (result.isConfirmed) {
        
        fetch(`/orders/cancel/${orderId}`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json'
          },body:JSON.stringify({reason:result.value})
        })
          .then(response => response.json())
          .then(data => {
            if (data.ok) {
              Swal.fire({
                title: 'Cancelled!',
                text: data.message,
                icon: 'success'
              });
             window.location.reload()
            } else {
              Swal.fire({
                title: 'Failed!',
                text: data.message || 'Something went wrong.',
                icon: 'error'
              });
            }
          })
          .catch(error => {
            console.error(error);
            Swal.fire({
              title: 'Error!',
              text: `An unexpected error occurred,${error}`,
              icon: 'error'
            });
          });
      }
    });
  });
    
  async function giveReview(productId){
    Swal.fire({
        icon:'error',
        title: "Review Feature is not functional" 
    })
  }
  // Function to cancel a single product
  async function cancelSingleOrder(itemId, orderId) {
    try {
        Swal.fire({
            title: "Do you really want to cancel this product?",
            icon: 'info',
            text: 'Provide a reason for cancelling this product!',
            html: `
                <select id="returnReason" class="swal2-select" style="width: 70%; border:solid grey 1px; padding: 10px; margin-top: 10px;">
                    <option value="" disabled selected>Choose a reason</option>
                    <option value="damaged">Changed My Mind</option>
                    <option value="wrongItem">Choosed wrong item</option>
                    <option value="other">Other (Specify)</option>
                </select>
                <input type="text" id="customReason" class="swal2-input" style="margin-top: 10px; display: none;" placeholder="Enter your reason">
            `,
            showCancelButton: true,
            confirmButtonText: "Yes, Cancel this item",
            cancelButtonText: "No",
            preConfirm: () => {
                const selectedReason = document.getElementById("returnReason").value;
                const customReason = document.getElementById("customReason").value.trim();
                if (!selectedReason) {
                    return Swal.showValidationMessage("Please select a reason.");
                }
                if (selectedReason === "other" && !customReason) {
                    return Swal.showValidationMessage("Please enter a custom reason.");
                }
                return selectedReason === "other" ? customReason : selectedReason;
            },
            didOpen: () => {
                const selectBox = document.getElementById("returnReason");
                const customInput = document.getElementById("customReason");
                selectBox.addEventListener("change", () => {
                    customInput.style.display = selectBox.value === "other" ? "block" : "none";
                });
            }
        }).then(async (result) => {
            if (result.isConfirmed) {
                const reason = result.value;
                console.log(itemId, reason);
                try {
                    const response = await fetch(`/orders/cancel-product/${orderId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            itemId,
                            reason,
                        })
                    });
                    const resultData = await response.json();
                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Product cancellation request submitted successfully.'
                        }).then(() => {
                            window.location.reload(); 
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: resultData.message || 'Failed to cancel the product.'
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred while processing your request. Please try again.'
                    });
                    console.error('Error cancelling product:', error);
                }
            }
        });
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Unexpected Error!',
            text: 'Something went wrong. Please try again later.'
        });
        console.error('Unexpected error:', error);
    }
}

async function requestReturn(itemId, orderId) {
    try {
        const { value: reason } = await Swal.fire({
            title: "Return Request",
            input: "text",
            inputLabel: "Please provide a reason for return",
            inputPlaceholder: "Enter return reason",
            showCancelButton: true,
            confirmButtonText: "Submit",
            cancelButtonText: "Cancel",
            inputValidator: (value) => {
                if (!value) {
                    return "Return reason is required!";
                }
            }
        });

        if (!reason) return; // User canceled the prompt
        console.log(orderId,itemId,reason,'request product return')
        const response = await fetch(`/request-product-return`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: orderId,
                itemId: itemId,
                reason: reason,
                //returnRequestDate: new Date().toISOString()
            })
        });
        const result = await response.json();
        if (response.ok) {
            Swal.fire("Success", "Return request submitted successfully!", "success").then(() => {
                window.location.reload();
            });
        } else {
            Swal.fire("Error", result.message || "Failed to submit return request", "error");
        }
    } catch (error) {
        console.error('Error requesting return:', error);
        Swal.fire("Error", "An error occurred while submitting return request. Please try again.", "error");
    }
}

       async function requestForReturn(order) {
        console.log(order)
        Swal.fire({
            title:'Request for Return of products',
            icon:'warning',
            text:'choose the products you want to return and provide reason',
            allowOutsideClick:false,
            allowEscapeKey:false,
            showCancelButton:true,
            confirmButtonText:'Request for Return',
            html:`<div class='row'>
                <div>hello</div>
                </div>`,
        })
       }
       </script>
    <%- include('partials/scriptTags.ejs') %>
</body>
